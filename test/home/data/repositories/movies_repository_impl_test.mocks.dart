// Mocks generated by Mockito 5.4.5 from annotations
// in fh/test/home/data/repositories/movies_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:data_connection_checker_tv/data_connection_checker.dart' as _i3;
import 'package:dio/dio.dart' as _i2;
import 'package:fh/core/shared/data/models/movie_model.dart' as _i7;
import 'package:fh/core/shared/data/models/movie_response_model.dart' as _i4;
import 'package:fh/features/home/data/data_sources/local/movies_local_data_source.dart'
    as _i9;
import 'package:fh/features/home/data/data_sources/remote/movies_remote_data_source.dart'
    as _i5;
import 'package:fh/features/home/data/models/movies_params.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataConnectionChecker_1 extends _i1.SmartFake
    implements _i3.DataConnectionChecker {
  _FakeDataConnectionChecker_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_2<T> extends _i1.SmartFake
    implements _i4.ApiResponse<T> {
  _FakeApiResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRemoteDataSourceImpl extends _i1.Mock
    implements _i5.MoviesRemoteDataSourceImpl {
  MockMoviesRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i3.DataConnectionChecker get networkInfo => (super.noSuchMethod(
        Invocation.getter(#networkInfo),
        returnValue: _FakeDataConnectionChecker_1(
          this,
          Invocation.getter(#networkInfo),
        ),
      ) as _i3.DataConnectionChecker);

  @override
  _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>> getPopularMovies(
          _i8.MoviesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [params],
        ),
        returnValue: _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>.value(
            _FakeApiResponse_2<List<_i7.MovieModel>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [params],
          ),
        )),
      ) as _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>);

  @override
  _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>> getTopRatedMovies(
          _i8.MoviesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [params],
        ),
        returnValue: _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>.value(
            _FakeApiResponse_2<List<_i7.MovieModel>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [params],
          ),
        )),
      ) as _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>);

  @override
  _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>> getNowPlayingMovies(
          _i8.MoviesParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [params],
        ),
        returnValue: _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>.value(
            _FakeApiResponse_2<List<_i7.MovieModel>>(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [params],
          ),
        )),
      ) as _i6.Future<_i4.ApiResponse<List<_i7.MovieModel>>>);
}

/// A class which mocks [MoviesLocalDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesLocalDataSourceImpl extends _i1.Mock
    implements _i9.MoviesLocalDataSourceImpl {
  MockMoviesLocalDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.MovieModel> getNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue: <_i7.MovieModel>[],
      ) as List<_i7.MovieModel>);

  @override
  List<_i7.MovieModel> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: <_i7.MovieModel>[],
      ) as List<_i7.MovieModel>);

  @override
  List<_i7.MovieModel> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: <_i7.MovieModel>[],
      ) as List<_i7.MovieModel>);

  @override
  void putNowPlayingMovies(List<_i7.MovieModel>? movies) => super.noSuchMethod(
        Invocation.method(
          #putNowPlayingMovies,
          [movies],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void putPopularMovies(List<_i7.MovieModel>? movies) => super.noSuchMethod(
        Invocation.method(
          #putPopularMovies,
          [movies],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void putTopRatedMovies(List<_i7.MovieModel>? movies) => super.noSuchMethod(
        Invocation.method(
          #putTopRatedMovies,
          [movies],
        ),
        returnValueForMissingStub: null,
      );
}
